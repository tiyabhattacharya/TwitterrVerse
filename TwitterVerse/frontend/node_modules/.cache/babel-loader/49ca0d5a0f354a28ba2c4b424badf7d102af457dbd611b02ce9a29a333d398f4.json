{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\master\\\\OneDrive\\\\Desktop\\\\TwitterrVerse\\\\TwitterVerse\\\\frontend\\\\src\\\\pages\\\\Feed\\\\TweetBox\\\\TweetBox.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"./TweetBox.css\";\n// import { Avatar, Button } from \"@mui/material\";\n// import AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\n// import axios from \"axios\";\n// import useLoggedInUser from \"../../../hooks/useLoggedInUser\";\n// //import { useUserAuth } from \"../../../context/UserAuthContext\";\n// import { useAuthState } from \"react-firebase-hooks/auth\";\n\n// function TweetBox() {\n//     const [post, setPost] = useState('');\n//     const [imageURL, setImageURL] = useState('');\n//     const [isLoading, setIsLoading] = useState('');\n//     const [name, setName] = useState('');\n//     const [username, setUsername] = useState(' ');\n//     const [loggedInUser] = useLoggedInUser();\n//    const [user]  = useAuthState();\n//     const email = user?.email;\n\n//     //console.log(loggedInUser);\n\n//     const userProfilePic = loggedInUser[0]?.profileImage ? loggedInUser[0]?.profileImage : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\"\n\n//     const handleUploadImage=(e)=>{\n//         setIsLoading(true);\n//        const image=e.target.files[0];\n//        const formData = new FormData();\n//        formData.set('image',image)\n\n//        axios.post(\"https://api.imgbb.com/1/upload?key=ce2e4d1f58f22cdab08d0a12bec54f73\", formData)\n//        .then(res=>{\n//         setImageURL(res.data.data.display_url)\n//         console.log(res.data.data.display_url)\n//         setIsLoading(false);\n\n//        })\n//        .catch((error)=>{\n//         console.log(error);\n//         setIsLoading(false);\n//        })\n//     }\n\n// const handleTweet = (e) => {\n//     e.preventDefault();\n//     if(imageURL){\n//         const userPost={\n//             post:post,\n//             photo:imageURL\n//         }\n//         //console.log(userPost);\n\n//         fetch(`http://localhost:5000/post`,{\n//             method:\"POST\",\n//             headers:{\n//                 'content-type':'application/json'\n//             },\n//             body:JSON.stringify(userPost)\n\n//         })\n//          .then(res=>res.json())\n//          .then(data=>{\n//             console.log(data);\n//          })\n\n//     }\n//  };\n\n//     const handleTweet = (e) => {\n//         e.preventDefault();\n\n//         if (user.providerData[0].providerId === 'password') {\n//             fetch(`https://localhost:5000/loggedInUser?email=${email}`)\n//                 .then(res => res.json())\n//                 .then(data => {\n//                     setName(data[0]?.name)\n//                     setUsername(data[0]?.username)\n//                 })\n//         }\n//         else {\n//             setName(user?.displayName)\n//             setUsername(email?.split('@')[0])\n//         }\n\n//         if (name) {\n//             const userPost = {\n//                 profilePhoto: userProfilePic,\n//                 post: post,\n//                 photo: imageURL,\n//                 username: username,\n//                 name: name,\n//                 email: email,\n//             }\n//             //console.log(userPost);\n//             setPost('')\n//             setImageURL('')\n\n//             fetch('https://localhost:5000/post', {\n//                 method: \"POST\",\n//                 headers: {\n//                     'content-type': 'application/json'\n//                 },\n//                 body: JSON.stringify(userPost),\n//             })\n//                 .then(res => res.json())\n//                 .then(data => {\n//                     console.log(data);\n\n//                 })\n//         }\n//     }\n\n//     return (\n//         <div className=\"tweetBox\">\n//             <form onSubmit={handleTweet}>\n//                 <div className=\"tweetBox__input\">\n//                     <Avatar src=\"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\" />\n//                     <input\n//                         type=\"text\"\n//                         placeholder=\"What's happening?\"\n//                         onChange={(e) => setPost(e.target.value)}\n//                          value={post}\n//                          required\n//                     />\n//                 </div>\n\n//                 <div className=\"imageIcon_tweetButton\">\n//                     <label htmlFor='image' className=\"imageIcon\">\n//                         {\n//                            isLoading?<p>Uploading image</p> :<p>{imageURL ? 'image uploaded' : <AddPhotoAlternateIcon/>}</p>\n//                         }\n//                     </label>\n//                     <input\n//                         type=\"file\"\n//                         id='image'\n//                         className=\"imageInput\"\n//                         onChange={handleUploadImage}\n//                     />\n//                     <Button className=\"tweetBox__tweetButton\" type=\"submit\">Tweet</Button>\n//                 </div>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default TweetBox;\nimport React, { useState, useEffect } from \"react\";\nimport \"./TweetBox.css\";\nimport { Avatar, Button } from \"@mui/material\";\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\nimport axios from \"axios\";\nimport useLoggedInUser from \"../../../hooks/useLoggedInUser\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../../../firebase\"; // Ensure you import your Firebase auth object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TweetBox() {\n  _s();\n  var _loggedInUser$, _loggedInUser$2;\n  const [post, setPost] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [loggedInUser] = useLoggedInUser();\n  const [user, loading, error] = useAuthState(auth); // Pass the auth object here\n  const email = user === null || user === void 0 ? void 0 : user.email;\n  const userProfilePic = (_loggedInUser$ = loggedInUser[0]) !== null && _loggedInUser$ !== void 0 && _loggedInUser$.profileImage ? (_loggedInUser$2 = loggedInUser[0]) === null || _loggedInUser$2 === void 0 ? void 0 : _loggedInUser$2.profileImage : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\";\n  const handleUploadImage = e => {\n    setIsLoading(true);\n    const image = e.target.files[0];\n    const formData = new FormData();\n    formData.set('image', image);\n    axios.post(\"https://api.imgbb.com/1/upload?key=ce2e4d1f58f22cdab08d0a12bec54f73\", formData).then(res => {\n      setImageURL(res.data.data.display_url);\n      console.log(res.data.data.display_url);\n      setIsLoading(false);\n    }).catch(error => {\n      console.log(error);\n      setIsLoading(false);\n    });\n  };\n  const handleTweet = e => {\n    e.preventDefault();\n    if (!user) {\n      console.error(\"User is not authenticated\");\n      return;\n    }\n    if (user.providerData[0].providerId === 'password') {\n      fetch(`https://localhost:5000/loggedInUser?email=${email}`).then(res => res.json()).then(data => {\n        var _data$, _data$2;\n        setName((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.name);\n        setUsername((_data$2 = data[0]) === null || _data$2 === void 0 ? void 0 : _data$2.username);\n      });\n    } else {\n      setName(user === null || user === void 0 ? void 0 : user.displayName);\n      setUsername(email === null || email === void 0 ? void 0 : email.split('@')[0]);\n    }\n    if (name) {\n      const userPost = {\n        profilePhoto: userProfilePic,\n        post: post,\n        photo: imageURL,\n        username: username,\n        name: name,\n        email: email\n      };\n      setPost('');\n      setImageURL('');\n      fetch('https://localhost:5000/post', {\n        method: \"POST\",\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(userPost)\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTweet,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox__input\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: userProfilePic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"What's happening?\",\n          onChange: e => setPost(e.target.value),\n          value: post,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageIcon_tweetButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"imageIcon\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Uploading image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: imageURL ? 'Image uploaded' : /*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 97\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          className: \"imageInput\",\n          onChange: handleUploadImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"tweetBox__tweetButton\",\n          type: \"submit\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n}\n_s(TweetBox, \"t15GxfKddaS0Mn+LvOHaGGlCZtU=\", false, function () {\n  return [useLoggedInUser, useAuthState];\n});\n_c = TweetBox;\nexport default TweetBox;\nvar _c;\n$RefreshReg$(_c, \"TweetBox\");","map":{"version":3,"names":["React","useState","useEffect","Avatar","Button","AddPhotoAlternateIcon","axios","useLoggedInUser","useAuthState","auth","jsxDEV","_jsxDEV","TweetBox","_s","_loggedInUser$","_loggedInUser$2","post","setPost","imageURL","setImageURL","isLoading","setIsLoading","name","setName","username","setUsername","loggedInUser","user","loading","error","email","userProfilePic","profileImage","handleUploadImage","e","image","target","files","formData","FormData","set","then","res","data","display_url","console","log","catch","handleTweet","preventDefault","providerData","providerId","fetch","json","_data$","_data$2","displayName","split","userPost","profilePhoto","photo","method","headers","body","JSON","stringify","className","children","onSubmit","src","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","value","required","htmlFor","id","_c","$RefreshReg$"],"sources":["C:/Users/master/OneDrive/Desktop/TwitterrVerse/TwitterVerse/frontend/src/pages/Feed/TweetBox/TweetBox.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./TweetBox.css\";\r\n// import { Avatar, Button } from \"@mui/material\";\r\n// import AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\r\n// import axios from \"axios\";\r\n// import useLoggedInUser from \"../../../hooks/useLoggedInUser\";\r\n// //import { useUserAuth } from \"../../../context/UserAuthContext\";\r\n// import { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\n// function TweetBox() {\r\n//     const [post, setPost] = useState('');\r\n//     const [imageURL, setImageURL] = useState('');\r\n//     const [isLoading, setIsLoading] = useState('');\r\n//     const [name, setName] = useState('');\r\n//     const [username, setUsername] = useState(' ');\r\n//     const [loggedInUser] = useLoggedInUser();\r\n//    const [user]  = useAuthState();\r\n//     const email = user?.email;\r\n\r\n    \r\n//     //console.log(loggedInUser);\r\n\r\n//     const userProfilePic = loggedInUser[0]?.profileImage ? loggedInUser[0]?.profileImage : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\"\r\n\r\n//     const handleUploadImage=(e)=>{\r\n//         setIsLoading(true);\r\n//        const image=e.target.files[0];\r\n//        const formData = new FormData();\r\n//        formData.set('image',image)\r\n\r\n//        axios.post(\"https://api.imgbb.com/1/upload?key=ce2e4d1f58f22cdab08d0a12bec54f73\", formData)\r\n//        .then(res=>{\r\n//         setImageURL(res.data.data.display_url)\r\n//         console.log(res.data.data.display_url)\r\n//         setIsLoading(false);\r\n\r\n//        })\r\n//        .catch((error)=>{\r\n//         console.log(error);\r\n//         setIsLoading(false);\r\n//        })\r\n//     }\r\n\r\n    // const handleTweet = (e) => {\r\n    //     e.preventDefault();\r\n    //     if(imageURL){\r\n    //         const userPost={\r\n    //             post:post,\r\n    //             photo:imageURL\r\n    //         }\r\n    //         //console.log(userPost);\r\n\r\n    //         fetch(`http://localhost:5000/post`,{\r\n    //             method:\"POST\",\r\n    //             headers:{\r\n    //                 'content-type':'application/json'\r\n    //             },\r\n    //             body:JSON.stringify(userPost)\r\n                \r\n    //         })\r\n    //          .then(res=>res.json())\r\n    //          .then(data=>{\r\n    //             console.log(data);\r\n    //          })\r\n            \r\n    //     }\r\n    //  };\r\n\r\n//     const handleTweet = (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (user.providerData[0].providerId === 'password') {\r\n//             fetch(`https://localhost:5000/loggedInUser?email=${email}`)\r\n//                 .then(res => res.json())\r\n//                 .then(data => {\r\n//                     setName(data[0]?.name)\r\n//                     setUsername(data[0]?.username)\r\n//                 })\r\n//         }\r\n//         else {\r\n//             setName(user?.displayName)\r\n//             setUsername(email?.split('@')[0])\r\n//         }\r\n\r\n//         if (name) {\r\n//             const userPost = {\r\n//                 profilePhoto: userProfilePic,\r\n//                 post: post,\r\n//                 photo: imageURL,\r\n//                 username: username,\r\n//                 name: name,\r\n//                 email: email,\r\n//             }\r\n//             //console.log(userPost);\r\n//             setPost('')\r\n//             setImageURL('')\r\n\r\n//             fetch('https://localhost:5000/post', {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     'content-type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify(userPost),\r\n//             })\r\n//                 .then(res => res.json())\r\n//                 .then(data => {\r\n//                     console.log(data);\r\n\r\n//                 })\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"tweetBox\">\r\n//             <form onSubmit={handleTweet}>\r\n//                 <div className=\"tweetBox__input\">\r\n//                     <Avatar src=\"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\" />\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         placeholder=\"What's happening?\"\r\n//                         onChange={(e) => setPost(e.target.value)}\r\n//                          value={post}\r\n//                          required\r\n//                     />\r\n//                 </div>\r\n\r\n//                 <div className=\"imageIcon_tweetButton\">\r\n//                     <label htmlFor='image' className=\"imageIcon\">\r\n//                         {\r\n//                            isLoading?<p>Uploading image</p> :<p>{imageURL ? 'image uploaded' : <AddPhotoAlternateIcon/>}</p>\r\n//                         }\r\n//                     </label>\r\n//                     <input\r\n//                         type=\"file\"\r\n//                         id='image'\r\n//                         className=\"imageInput\"\r\n//                         onChange={handleUploadImage}\r\n//                     />\r\n//                     <Button className=\"tweetBox__tweetButton\" type=\"submit\">Tweet</Button>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default TweetBox;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./TweetBox.css\";\r\nimport { Avatar, Button } from \"@mui/material\";\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\r\nimport axios from \"axios\";\r\nimport useLoggedInUser from \"../../../hooks/useLoggedInUser\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../../../firebase\"; // Ensure you import your Firebase auth object\r\n\r\nfunction TweetBox() {\r\n    const [post, setPost] = useState('');\r\n    const [imageURL, setImageURL] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [loggedInUser] = useLoggedInUser();\r\n    const [user, loading, error] = useAuthState(auth); // Pass the auth object here\r\n    const email = user?.email;\r\n\r\n    const userProfilePic = loggedInUser[0]?.profileImage ? loggedInUser[0]?.profileImage : \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\"\r\n\r\n    const handleUploadImage = (e) => {\r\n        setIsLoading(true);\r\n        const image = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.set('image', image);\r\n\r\n        axios.post(\"https://api.imgbb.com/1/upload?key=ce2e4d1f58f22cdab08d0a12bec54f73\", formData)\r\n            .then(res => {\r\n                setImageURL(res.data.data.display_url);\r\n                console.log(res.data.data.display_url);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const handleTweet = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!user) {\r\n            console.error(\"User is not authenticated\");\r\n            return;\r\n        }\r\n\r\n        if (user.providerData[0].providerId === 'password') {\r\n            fetch(`https://localhost:5000/loggedInUser?email=${email}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setName(data[0]?.name);\r\n                    setUsername(data[0]?.username);\r\n                });\r\n        } else {\r\n            setName(user?.displayName);\r\n            setUsername(email?.split('@')[0]);\r\n        }\r\n\r\n        if (name) {\r\n            const userPost = {\r\n                profilePhoto: userProfilePic,\r\n                post: post,\r\n                photo: imageURL,\r\n                username: username,\r\n                name: name,\r\n                email: email,\r\n            };\r\n            setPost('');\r\n            setImageURL('');\r\n\r\n            fetch('https://localhost:5000/post', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userPost),\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n            <form onSubmit={handleTweet}>\r\n                <div className=\"tweetBox__input\">\r\n                    <Avatar src={userProfilePic} />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"What's happening?\"\r\n                        onChange={(e) => setPost(e.target.value)}\r\n                        value={post}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"imageIcon_tweetButton\">\r\n                    <label htmlFor='image' className=\"imageIcon\">\r\n                        {isLoading ? <p>Uploading image</p> : <p>{imageURL ? 'Image uploaded' : <AddPhotoAlternateIcon />}</p>}\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id='image'\r\n                        className=\"imageInput\"\r\n                        onChange={handleUploadImage}\r\n                    />\r\n                    <Button className=\"tweetBox__tweetButton\" type=\"submit\">Tweet</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TweetBox;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,SAASC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AAC9C,OAAOC,qBAAqB,MAAM,+CAA+C;AACjF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,IAAI,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,cAAA,EAAAC,eAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}