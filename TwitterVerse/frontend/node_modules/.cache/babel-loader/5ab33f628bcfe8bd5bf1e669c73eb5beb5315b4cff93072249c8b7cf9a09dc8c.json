{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import auth from '../firebase.init';\n\n// const useLoggedInUser = () => {\n//     const [user] = useAuthState(auth);\n//     const email= user?.email;\n//     const [loggedInUser, setLoggedInUser] = useState({});\n//     useEffect(()=>{\n//         fetch(`http://localhost:5000/loggedInUser?email=${email}`)\n//         .then(res=>res.json())\n//         .then(data =>{\n//             setLoggedInUser(data)\n//         })\n//     },[email, loggedInUser])\n//     return [loggedInUser, setLoggedInUser];\n// };\n\n// export default useLoggedInUser;\n\nimport { useEffect, useState } from 'react';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport auth from '../firebase.init';\nconst useLoggedInUser = () => {\n  _s();\n  const [user] = useAuthState(auth);\n  const email = user === null || user === void 0 ? void 0 : user.email;\n  const [loggedInUser, setLoggedInUser] = useState({});\n  useEffect(() => {\n    if (email) {\n      fetch(`http://localhost:5000/loggedInUser?email=${email}`).then(res => res.json()).then(data => {\n        setLoggedInUser(data);\n      }).catch(error => console.error(\"Error fetching logged in user:\", error));\n    }\n  }, [email]);\n  return [loggedInUser, setLoggedInUser];\n};\n_s(useLoggedInUser, \"q0U+jaXL65rlm5F3AeZaHSAplOs=\", false, function () {\n  return [useAuthState];\n});\nexport default useLoggedInUser;","map":{"version":3,"names":["useEffect","useState","useAuthState","auth","useLoggedInUser","_s","user","email","loggedInUser","setLoggedInUser","fetch","then","res","json","data","catch","error","console"],"sources":["C:/Users/master/OneDrive/Desktop/TwitterrVerse/TwitterVerse/frontend/src/hooks/useLoggedInUser.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n\r\n// import { useAuthState } from 'react-firebase-hooks/auth';\r\n// import auth from '../firebase.init';\r\n\r\n// const useLoggedInUser = () => {\r\n//     const [user] = useAuthState(auth);\r\n//     const email= user?.email;\r\n//     const [loggedInUser, setLoggedInUser] = useState({});\r\n//     useEffect(()=>{\r\n//         fetch(`http://localhost:5000/loggedInUser?email=${email}`)\r\n//         .then(res=>res.json())\r\n//         .then(data =>{\r\n//             setLoggedInUser(data)\r\n//         })\r\n//     },[email, loggedInUser])\r\n//     return [loggedInUser, setLoggedInUser];\r\n// };\r\n\r\n// export default useLoggedInUser;\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport auth from '../firebase.init';\r\n\r\nconst useLoggedInUser = () => {\r\n    const [user] = useAuthState(auth);\r\n    const email = user?.email;\r\n    const [loggedInUser, setLoggedInUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (email) {\r\n            fetch(`http://localhost:5000/loggedInUser?email=${email}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setLoggedInUser(data);\r\n                })\r\n                .catch(error => console.error(\"Error fetching logged in user:\", error));\r\n        }\r\n    }, [email]);\r\n\r\n    return [loggedInUser, setLoggedInUser];\r\n};\r\n\r\nexport default useLoggedInUser;\r\n"],"mappings":";AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,IAAI,MAAM,kBAAkB;AAEnC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,CAAC,GAAGJ,YAAY,CAACC,IAAI,CAAC;EACjC,MAAMI,KAAK,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,KAAK;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,IAAIO,KAAK,EAAE;MACPG,KAAK,CAAE,4CAA2CH,KAAM,EAAC,CAAC,CACrDI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACVL,eAAe,CAACK,IAAI,CAAC;MACzB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;IAC/E;EACJ,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,OAAO,CAACC,YAAY,EAAEC,eAAe,CAAC;AAC1C,CAAC;AAACJ,EAAA,CAjBID,eAAe;EAAA,QACFF,YAAY;AAAA;AAkB/B,eAAeE,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}